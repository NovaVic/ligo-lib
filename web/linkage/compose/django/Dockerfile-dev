FROM python:3.5

ENV PYTHONUNBUFFERED 1

#Docker file for forming local/dev Django container

# Requirements have to be pulled and installed here, otherwise caching won't work
#COPY ./requirements /requirements
COPY ./web/linkage/requirements /requirements
RUN pip install -r /requirements/local.txt

COPY ./web/linkage/ /linkage
#find better way
RUN mkdir /linkage/lib
COPY ./lib/  /linkage/lib


RUN pip install -e /linkage/lib/cdi-linking/
RUN pip install -e /linkage/lib/linking_ext/


COPY ./web/linkage/compose/django/entrypoint.sh /linkage/entrypoint.sh
RUN sed -i 's/\r//' /linkage/entrypoint.sh
RUN chmod +x /linkage/entrypoint.sh


COPY ./web/linkage/compose/django/start-dev.sh /linkage/start-dev.sh
RUN sed -i 's/\r//' /linkage/start-dev.sh
RUN chmod +x /linkage/start-dev.sh

#not mandatory for local/dev env; needed for prod setup when Django works with Apache or nginx
#RUN  groupadd -r django
#RUN useradd -r -g django django


RUN mkdir /user_data
RUN mkdir /user_data/media
RUN mkdir  /user_data/media/datasets
RUN mkdir  /user_data/media/linking

#use this style when not volume mounting the (files column --- see the docker-compose file please)
#COPY ./lib/cdi-linking/test/dedup/levensthein/  /user_data/media/datasets


#the following change in ownership instructions are not absolutely essential for docker based local/dev env

RUN chmod -R 0777 /user_data
RUN echo 'django:x:999:999:django:/:/bin/sh' >> /etc/passwd

RUN chown  999:999 /linkage/entrypoint.sh
RUN chown  999:999 /linkage/start-dev.sh

RUN chown  999:999 -R /linkage
RUN chown  999:999 -R /user_data



#RUN touch /tmp/django-email-dev
RUN mkdir /tmp/django-email-dev
RUN chown  999:999 -R /tmp


#USER django
USER "999:999"
WORKDIR /linkage

ENTRYPOINT ["/linkage/entrypoint.sh"]
